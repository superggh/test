// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.ext.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RegistAccountReq struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *RegistAccountReq) Reset()                    { *m = RegistAccountReq{} }
func (m *RegistAccountReq) String() string            { return proto.CompactTextString(m) }
func (*RegistAccountReq) ProtoMessage()               {}
func (*RegistAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *RegistAccountReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegistAccountReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RegistAccountReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RegistAccountRsp struct {
}

func (m *RegistAccountRsp) Reset()                    { *m = RegistAccountRsp{} }
func (m *RegistAccountRsp) String() string            { return proto.CompactTextString(m) }
func (*RegistAccountRsp) ProtoMessage()               {}
func (*RegistAccountRsp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

type LoginAccountReq struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginAccountReq) Reset()                    { *m = LoginAccountReq{} }
func (m *LoginAccountReq) String() string            { return proto.CompactTextString(m) }
func (*LoginAccountReq) ProtoMessage()               {}
func (*LoginAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *LoginAccountReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginAccountReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginAccountRsp struct {
	UserID   int64  `protobuf:"varint,1,opt,name=userID" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone    string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
}

func (m *LoginAccountRsp) Reset()                    { *m = LoginAccountRsp{} }
func (m *LoginAccountRsp) String() string            { return proto.CompactTextString(m) }
func (*LoginAccountRsp) ProtoMessage()               {}
func (*LoginAccountRsp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *LoginAccountRsp) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *LoginAccountRsp) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LoginAccountRsp) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginAccountRsp) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ResetAccountReq struct {
}

func (m *ResetAccountReq) Reset()                    { *m = ResetAccountReq{} }
func (m *ResetAccountReq) String() string            { return proto.CompactTextString(m) }
func (*ResetAccountReq) ProtoMessage()               {}
func (*ResetAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

type ResetAccountRsp struct {
}

func (m *ResetAccountRsp) Reset()                    { *m = ResetAccountRsp{} }
func (m *ResetAccountRsp) String() string            { return proto.CompactTextString(m) }
func (*ResetAccountRsp) ProtoMessage()               {}
func (*ResetAccountRsp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

type WantScoreReq struct {
	UserId  int64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	MovieId int64 `protobuf:"varint,2,opt,name=movieId" json:"movieId,omitempty"`
	Score   int64 `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
}

func (m *WantScoreReq) Reset()                    { *m = WantScoreReq{} }
func (m *WantScoreReq) String() string            { return proto.CompactTextString(m) }
func (*WantScoreReq) ProtoMessage()               {}
func (*WantScoreReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *WantScoreReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *WantScoreReq) GetMovieId() int64 {
	if m != nil {
		return m.MovieId
	}
	return 0
}

func (m *WantScoreReq) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type WantScoreRsp struct {
}

func (m *WantScoreRsp) Reset()                    { *m = WantScoreRsp{} }
func (m *WantScoreRsp) String() string            { return proto.CompactTextString(m) }
func (*WantScoreRsp) ProtoMessage()               {}
func (*WantScoreRsp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

type UpdateUserProfileReq struct {
	UserImage string `protobuf:"bytes,1,opt,name=userImage" json:"userImage,omitempty"`
	UserName  string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	UserEmail string `protobuf:"bytes,3,opt,name=userEmail" json:"userEmail,omitempty"`
	UserPhone string `protobuf:"bytes,4,opt,name=userPhone" json:"userPhone,omitempty"`
	UserID    int64  `protobuf:"varint,5,opt,name=userID" json:"userID,omitempty"`
}

func (m *UpdateUserProfileReq) Reset()                    { *m = UpdateUserProfileReq{} }
func (m *UpdateUserProfileReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserProfileReq) ProtoMessage()               {}
func (*UpdateUserProfileReq) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *UpdateUserProfileReq) GetUserImage() string {
	if m != nil {
		return m.UserImage
	}
	return ""
}

func (m *UpdateUserProfileReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UpdateUserProfileReq) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *UpdateUserProfileReq) GetUserPhone() string {
	if m != nil {
		return m.UserPhone
	}
	return ""
}

func (m *UpdateUserProfileReq) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type UpdateUserProfileRsp struct {
}

func (m *UpdateUserProfileRsp) Reset()                    { *m = UpdateUserProfileRsp{} }
func (m *UpdateUserProfileRsp) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserProfileRsp) ProtoMessage()               {}
func (*UpdateUserProfileRsp) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func init() {
	proto.RegisterType((*RegistAccountReq)(nil), "pb.RegistAccountReq")
	proto.RegisterType((*RegistAccountRsp)(nil), "pb.RegistAccountRsp")
	proto.RegisterType((*LoginAccountReq)(nil), "pb.LoginAccountReq")
	proto.RegisterType((*LoginAccountRsp)(nil), "pb.LoginAccountRsp")
	proto.RegisterType((*ResetAccountReq)(nil), "pb.ResetAccountReq")
	proto.RegisterType((*ResetAccountRsp)(nil), "pb.ResetAccountRsp")
	proto.RegisterType((*WantScoreReq)(nil), "pb.WantScoreReq")
	proto.RegisterType((*WantScoreRsp)(nil), "pb.WantScoreRsp")
	proto.RegisterType((*UpdateUserProfileReq)(nil), "pb.UpdateUserProfileReq")
	proto.RegisterType((*UpdateUserProfileRsp)(nil), "pb.UpdateUserProfileRsp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for UserServiceExt service

type UserServiceExtClient interface {
	// 注册用户
	RegistAccount(ctx context.Context, in *RegistAccountReq, opts ...client.CallOption) (*RegistAccountRsp, error)
	// 用户登录
	LoginAccount(ctx context.Context, in *LoginAccountReq, opts ...client.CallOption) (*LoginAccountRsp, error)
	// 密码重置
	ResetAccount(ctx context.Context, in *ResetAccountReq, opts ...client.CallOption) (*ResetAccountRsp, error)
	// 评分
	WantScore(ctx context.Context, in *WantScoreReq, opts ...client.CallOption) (*WantScoreRsp, error)
	// 修改用户信息
	UpdateUserProfile(ctx context.Context, in *UpdateUserProfileReq, opts ...client.CallOption) (*UpdateUserProfileRsp, error)
}

type userServiceExtClient struct {
	c           client.Client
	serviceName string
}

func NewUserServiceExtClient(serviceName string, c client.Client) UserServiceExtClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "pb"
	}
	return &userServiceExtClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userServiceExtClient) RegistAccount(ctx context.Context, in *RegistAccountReq, opts ...client.CallOption) (*RegistAccountRsp, error) {
	req := c.c.NewRequest(c.serviceName, "UserServiceExt.RegistAccount", in)
	out := new(RegistAccountRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceExtClient) LoginAccount(ctx context.Context, in *LoginAccountReq, opts ...client.CallOption) (*LoginAccountRsp, error) {
	req := c.c.NewRequest(c.serviceName, "UserServiceExt.LoginAccount", in)
	out := new(LoginAccountRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceExtClient) ResetAccount(ctx context.Context, in *ResetAccountReq, opts ...client.CallOption) (*ResetAccountRsp, error) {
	req := c.c.NewRequest(c.serviceName, "UserServiceExt.ResetAccount", in)
	out := new(ResetAccountRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceExtClient) WantScore(ctx context.Context, in *WantScoreReq, opts ...client.CallOption) (*WantScoreRsp, error) {
	req := c.c.NewRequest(c.serviceName, "UserServiceExt.WantScore", in)
	out := new(WantScoreRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceExtClient) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileReq, opts ...client.CallOption) (*UpdateUserProfileRsp, error) {
	req := c.c.NewRequest(c.serviceName, "UserServiceExt.UpdateUserProfile", in)
	out := new(UpdateUserProfileRsp)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserServiceExt service

type UserServiceExtHandler interface {
	// 注册用户
	RegistAccount(context.Context, *RegistAccountReq, *RegistAccountRsp) error
	// 用户登录
	LoginAccount(context.Context, *LoginAccountReq, *LoginAccountRsp) error
	// 密码重置
	ResetAccount(context.Context, *ResetAccountReq, *ResetAccountRsp) error
	// 评分
	WantScore(context.Context, *WantScoreReq, *WantScoreRsp) error
	// 修改用户信息
	UpdateUserProfile(context.Context, *UpdateUserProfileReq, *UpdateUserProfileRsp) error
}

func RegisterUserServiceExtHandler(s server.Server, hdlr UserServiceExtHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&UserServiceExt{hdlr}, opts...))
}

type UserServiceExt struct {
	UserServiceExtHandler
}

func (h *UserServiceExt) RegistAccount(ctx context.Context, in *RegistAccountReq, out *RegistAccountRsp) error {
	return h.UserServiceExtHandler.RegistAccount(ctx, in, out)
}

func (h *UserServiceExt) LoginAccount(ctx context.Context, in *LoginAccountReq, out *LoginAccountRsp) error {
	return h.UserServiceExtHandler.LoginAccount(ctx, in, out)
}

func (h *UserServiceExt) ResetAccount(ctx context.Context, in *ResetAccountReq, out *ResetAccountRsp) error {
	return h.UserServiceExtHandler.ResetAccount(ctx, in, out)
}

func (h *UserServiceExt) WantScore(ctx context.Context, in *WantScoreReq, out *WantScoreRsp) error {
	return h.UserServiceExtHandler.WantScore(ctx, in, out)
}

func (h *UserServiceExt) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileReq, out *UpdateUserProfileRsp) error {
	return h.UserServiceExtHandler.UpdateUserProfile(ctx, in, out)
}

func init() { proto.RegisterFile("user.ext.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xe2, 0x30,
	0x10, 0x5d, 0x92, 0x85, 0x5d, 0x46, 0x2c, 0x1f, 0xde, 0x08, 0x45, 0xd1, 0x1e, 0x56, 0x3e, 0xf5,
	0x14, 0xa9, 0xed, 0xad, 0x52, 0x0f, 0x55, 0xcb, 0x01, 0xa9, 0xaa, 0x50, 0x10, 0xed, 0xb5, 0x21,
	0x99, 0xd2, 0x48, 0x24, 0x36, 0x71, 0xa0, 0xfc, 0xa0, 0xfe, 0x95, 0xfe, 0xaf, 0xca, 0x0e, 0x09,
	0x26, 0xa1, 0xa8, 0xc7, 0xf7, 0xc6, 0x6f, 0xde, 0xe4, 0xcd, 0x04, 0xba, 0x6b, 0x81, 0xa9, 0x8b,
	0xdb, 0xcc, 0xe5, 0x29, 0xcb, 0x18, 0x31, 0xf8, 0x9c, 0x3e, 0x43, 0xdf, 0xc3, 0x45, 0x24, 0xb2,
	0x9b, 0x20, 0x60, 0xeb, 0x24, 0xf3, 0x70, 0x45, 0x2c, 0x68, 0x62, 0xec, 0x47, 0x4b, 0xbb, 0xf1,
	0xbf, 0x71, 0xd6, 0xf6, 0x72, 0x40, 0x1c, 0xf8, 0x2d, 0xf5, 0x0f, 0x7e, 0x8c, 0xb6, 0xa1, 0x0a,
	0x25, 0x96, 0x35, 0xee, 0x0b, 0xf1, 0xc6, 0xd2, 0xd0, 0x36, 0xf3, 0x5a, 0x81, 0x29, 0xa9, 0x3a,
	0x08, 0x4e, 0x6f, 0xa1, 0x77, 0xcf, 0x16, 0x51, 0xf2, 0x1d, 0xd3, 0xb2, 0xb1, 0x51, 0x69, 0xbc,
	0xaa, 0x34, 0x11, 0x9c, 0x0c, 0xa1, 0x25, 0x67, 0x1a, 0xdf, 0xa9, 0x2e, 0xa6, 0xb7, 0x43, 0x27,
	0x67, 0x2f, 0x8d, 0x4d, 0xdd, 0xd8, 0x82, 0x26, 0x7f, 0x65, 0x09, 0xda, 0x3f, 0x73, 0x56, 0x01,
	0x3a, 0x80, 0x9e, 0x87, 0x02, 0xb5, 0xb0, 0x6a, 0x94, 0xe0, 0xf4, 0x11, 0x3a, 0x4f, 0x7e, 0x92,
	0x4d, 0x03, 0x96, 0xa2, 0xfc, 0xb4, 0x62, 0xaa, 0xf0, 0x60, 0xaa, 0x90, 0xd8, 0xf0, 0x2b, 0x66,
	0x9b, 0x08, 0xc7, 0xf9, 0xb7, 0x99, 0x5e, 0x01, 0xa5, 0xbb, 0x90, 0x6a, 0x35, 0x93, 0xe9, 0xe5,
	0x80, 0x76, 0xf5, 0xbe, 0x82, 0xd3, 0xf7, 0x06, 0x58, 0x33, 0x1e, 0xfa, 0x19, 0xce, 0x04, 0xa6,
	0x93, 0x94, 0xbd, 0x44, 0x4b, 0x65, 0xf8, 0x0f, 0xda, 0xca, 0x22, 0xf6, 0x17, 0xb8, 0xcb, 0x73,
	0x4f, 0x9c, 0x0c, 0x63, 0xa7, 0x1c, 0x69, 0x81, 0xec, 0x89, 0xa2, 0x3a, 0xd1, 0x82, 0xd9, 0x13,
	0x5a, 0xf8, 0x4d, 0x3d, 0x7c, 0x3a, 0x3c, 0x36, 0xa5, 0xe0, 0x17, 0x1f, 0x06, 0x74, 0x25, 0x35,
	0xc5, 0x74, 0x13, 0x05, 0x38, 0xda, 0x66, 0xe4, 0x1a, 0xfe, 0x1c, 0xdc, 0x0a, 0xb1, 0x5c, 0x3e,
	0x77, 0xab, 0x07, 0xea, 0x1c, 0x61, 0x05, 0xa7, 0x3f, 0xc8, 0x15, 0x74, 0xf4, 0x8b, 0x20, 0x7f,
	0xe5, 0xbb, 0xca, 0xa1, 0x39, 0x75, 0xb2, 0xd0, 0xea, 0x7b, 0xcc, 0xb5, 0x95, 0x65, 0x3b, 0x75,
	0x52, 0x69, 0xcf, 0xa1, 0x5d, 0x2e, 0x86, 0xf4, 0xe5, 0x1b, 0x7d, 0xff, 0x4e, 0x85, 0x51, 0x92,
	0x31, 0x0c, 0x6a, 0xa1, 0x10, 0x5b, 0x3e, 0x3c, 0xb6, 0x51, 0xe7, 0x8b, 0x8a, 0x6c, 0x35, 0x6f,
	0xa9, 0xbf, 0xf9, 0xf2, 0x33, 0x00, 0x00, 0xff, 0xff, 0x67, 0x41, 0xe0, 0x37, 0xdf, 0x03, 0x00,
	0x00,
}
